name: "Create CLI Deps PR"

on:
  workflow_dispatch:
    inputs:
      npmVersion:
        description: "6.x.x or latest"
        required: true
        default: 'latest'
      dryRun:
        description: "Do a dry run?"
        default: ''

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout npm/node
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: master
          repository: npm/node
          token: ${{ secrets.NPM_ROBOT_USER_PAT }}
      - name: Setup git user
        run: |
          git config --global user.email "npm team"
          git config --global user.name "ops+robot@npmjs.com"
      - name: Sync upstream changes
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.2
        with:
          target_sync_branch: master
          target_repo_token: ${{ secrets.NPM_ROBOT_USER_PAT }}
          upstream_sync_branch: master
          upstream_sync_repo: nodejs/node
          upstream_pull_args: --ff-only
      - name: Run dependency updates and create PR
        env:
          GITHUB_TOKEN: ${{ secrets.NPM_ROBOT_USER_PAT }}
        run: |
          base_dir="$( pwd )"/ 
          dry_run="${{ github.event.inputs.dryRun }}"
          npm_version="${{ github.event.inputs.npmVersion }}"
          npm_tag=""
          base_branch=""

          if [ "$npm_version" == "latest" ]; then 
            npm_tag=`npm view npm@latest version`
            base_branch="master"
          else
            npm_tag="$npm_version"
            base_branch="v14.x-staging"
          fi

          npm_vtag="v$npm_tag"
          npm_branch="npm-$npm_tag"
          message="deps: upgrade npm to $npm_tag"

          git checkout -b "$npm_branch"

          echo "Cloning CLI repo"
          gh repo clone npm/cli

          echo "Prepping CLI repo for release"
          cd cli
          git checkout "$npm_vtag"
          make
          make release

          echo "Removing old npm"
          deps_dir="$base_dir"deps/
          cd "$deps_dir"
          rm -rf npm/

          echo "Copying new npm"
          tar zxf "$base_dir"cli/release/"$npm_branch".tgz

          echo "Removing CLI workspace"
          cd "$base_dir"
          rm -rf cli

          git add -A deps/npm
          git commit -m "$message"
          git rebase --whitespace=fix master
          
          if [[ "$dry_run" == "true" ]]; then
            git status
            git show --summary
            echo $message
            echo $npm_branch
            echo $base_branch
            echo $npm_vtag
          else
            git push origin "$npm_branch"
            gh release view "$npm_vtag" -R npm/cli --json body -q ".body" | \
            gh pr create -R nodejs/node -B "$base_branch" -H "npm:$npm_branch" -t "$message" -F -
          fi
